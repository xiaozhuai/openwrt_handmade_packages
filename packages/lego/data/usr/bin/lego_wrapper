#!/bin/sh
set -e

. /etc/lego/env

lego_create() {
  domain="$1"
  hook="$2"
  /usr/bin/lego -a \
    --path "${LEGO_PATH}" \
    --email "${LEGO_EMAIL}" \
    --key-type "${LEGO_KEY_TYPE}" \
    ${LEGO_CHALLENGE_OPTIONS} \
    --domains "${domain}" \
    run \
    --run-hook="${hook}"
}

lego_renew() {
  domain="$1"
  hook="$2"
  /usr/bin/lego -a \
    --path "${LEGO_PATH}" \
    --email "${LEGO_EMAIL}" \
    --key-type "${LEGO_KEY_TYPE}" \
    ${LEGO_CHALLENGE_OPTIONS} \
    --domains "${domain}" \
    renew \
    --days "${LEGO_RENEW_DAYS}" \
    --renew-hook="${hook}"
}

lego_run() {
  domain="$1"
  domain_file_name="$(echo "${domain}" | sed "s/\*/_/g")"
  crt_file="${LEGO_PATH}/certificates/${domain_file_name}.crt"
  if [ ! -e "${crt_file}" ]; then
    echo "Create crt for ${domain}"
    hook="${LEGO_PATH}/hook_entrypoint_create.sh"
    lego_create "${domain}" "${hook}"
  else
    echo "Renew crt for ${domain}"
    hook="${LEGO_PATH}/hook_entrypoint_renew.sh"
    lego_renew "${domain}" "${hook}"
  fi
}

domain=""
domains_file=""

print_usage() {
  echo "Usage: $(basename "$0") [option]..."
  echo "Options:"
  echo "  -n    Domain"
  echo "  -f    File contains domains"
}

while getopts ':n:f:' OPTION; do
  case "${OPTION}" in
  n)
    domain="${OPTARG}"
    ;;
  f)
    domains_file="${OPTARG}"
    ;;
  ?)
    print_usage
    exit 1
    ;;
  esac
done

if [ -z "${domain}" ] && [ -z "${domains_file}" ]; then
  print_usage
  exit 1
fi

if [ -n "${domains_file}" ] && [ ! -f "${domains_file}" ]; then
  print_usage
  echo "File not found ${domains_file}"
  exit 1
fi

if [ -z "${LEGO_EMAIL}" ]; then
  echo "LEGO_EMAIL is empty, please specify it in ${LEGO_PATH}/env"
  exit 1
fi

[ ! -d "${LEGO_PATH}/hooks" ] && mkdir -p "${LEGO_PATH}/hooks"

if [ -n "${domain}" ]; then
  lego_run "${domain}"
fi

if [ -n "${domains_file}" ]; then
  while IFS= read -r domain; do
    domain="$(echo "${domain}" | tr -d '\r')"
    lego_run "${domain}"
  done <"${domains_file}"
fi
